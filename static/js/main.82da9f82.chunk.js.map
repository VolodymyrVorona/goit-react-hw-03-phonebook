{"version":3,"sources":["App.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem.jsx","Components/ContactList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","st","form","label","input","type","onChange","pattern","title","required","btn","Component","ContactListItem","onDeleteContact","listItem","onClick","ContactsList","contacts","map","id","Filter","onContactsFilter","wrapper","App","filter","addContact","newContact","shortId","generate","findTheSameName","alert","newName","normalizedName","toLowerCase","find","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevState","contact","changeFilter","parsedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredСontacts","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82da9f82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"label\":\"ContactForm_label__2mfXY\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2qeAn\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};","import { Component } from 'react';\nimport st from './ContactForm.module.css';\n\nclass Form extends Component {\n  state = { name: '', number: '' };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={st.form} onSubmit={this.handleSubmit}>\n        <label className={st.label}>\n          Name\n          <input\n            className={st.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={st.label}>\n          Number\n          <input\n            className={st.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={st.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport st from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <li className={st.listItem}>\n      <span className={st.name}>{name}:</span>\n      <span className={st.number}>{number}</span>\n      <button className={st.btn} type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport st from './Filter.module.css';\n\nconst Filter = ({ onContactsFilter, value }) => {\n  return (\n    <div className={st.wrapper}>\n      <label className={st.label}>\n        Find contacts by name\n        <input\n          className={st.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onContactsFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onContactsFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport contacts from './contacts.json';\nimport shortId from 'shortid';\n\nimport ContactForm from './Components/ContactForm';\nimport ContactsList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nimport st from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = localStorage.getItem('contacts');\n\n    if (!parsedContacts) return;\n\n    this.setState({ contacts: JSON.parse(parsedContacts) });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      return localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortId.generate(),\n      name,\n      number,\n    };\n\n    if (this.findTheSameName(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  findTheSameName = newName => {\n    const { contacts } = this.state;\n    const normalizedName = newName.toLowerCase();\n\n    return contacts.find(({ name }) => name.toLowerCase() === normalizedName);\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredСontacts = this.getVisibleContacts();\n\n    return (\n      <div className={st.wrapper}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter onContactsFilter={this.changeFilter} value={filter} />\n        <ContactsList\n          contacts={filteredСontacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__Z84yE\",\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};"],"sourceRoot":""}